// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pool/api/pool.proto

package vipnode_pool_api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Node_Kind int32

const (
	Node_UNKNOWN Node_Kind = 0
	Node_GETH    Node_Kind = 1
	Node_PARITY  Node_Kind = 2
)

var Node_Kind_name = map[int32]string{
	0: "UNKNOWN",
	1: "GETH",
	2: "PARITY",
}
var Node_Kind_value = map[string]int32{
	"UNKNOWN": 0,
	"GETH":    1,
	"PARITY":  2,
}

func (x Node_Kind) String() string {
	return proto.EnumName(Node_Kind_name, int32(x))
}
func (Node_Kind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_pool_0b04580054ff10b8, []int{1, 0}
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_pool_0b04580054ff10b8, []int{0}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Node struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Uri                  string    `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	Kind                 Node_Kind `protobuf:"varint,3,opt,name=kind,proto3,enum=vipnode.pool.api.Node_Kind" json:"kind,omitempty"`
	Version              string    `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Host                 bool      `protobuf:"varint,5,opt,name=host,proto3" json:"host,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_pool_0b04580054ff10b8, []int{1}
}
func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (dst *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(dst, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Node) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *Node) GetKind() Node_Kind {
	if m != nil {
		return m.Kind
	}
	return Node_UNKNOWN
}

func (m *Node) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Node) GetHost() bool {
	if m != nil {
		return m.Host
	}
	return false
}

type RegisterRequest struct {
	Node                 *Node    `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Nonce                int64    `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	NodeSig              string   `protobuf:"bytes,3,opt,name=node_sig,json=nodeSig,proto3" json:"node_sig,omitempty"`
	Wallet               string   `protobuf:"bytes,4,opt,name=wallet,proto3" json:"wallet,omitempty"`
	WalletAuthorization  string   `protobuf:"bytes,5,opt,name=wallet_authorization,json=walletAuthorization,proto3" json:"wallet_authorization,omitempty"`
	IsHost               bool     `protobuf:"varint,6,opt,name=is_host,json=isHost,proto3" json:"is_host,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterRequest) Reset()         { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()    {}
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pool_0b04580054ff10b8, []int{2}
}
func (m *RegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequest.Unmarshal(m, b)
}
func (m *RegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequest.Marshal(b, m, deterministic)
}
func (dst *RegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequest.Merge(dst, src)
}
func (m *RegisterRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterRequest.Size(m)
}
func (m *RegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequest proto.InternalMessageInfo

func (m *RegisterRequest) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *RegisterRequest) GetNonce() int64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *RegisterRequest) GetNodeSig() string {
	if m != nil {
		return m.NodeSig
	}
	return ""
}

func (m *RegisterRequest) GetWallet() string {
	if m != nil {
		return m.Wallet
	}
	return ""
}

func (m *RegisterRequest) GetWalletAuthorization() string {
	if m != nil {
		return m.WalletAuthorization
	}
	return ""
}

func (m *RegisterRequest) GetIsHost() bool {
	if m != nil {
		return m.IsHost
	}
	return false
}

type UpdateResponse struct {
	Balance              *Balance `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
	InvalidPeers         []string `protobuf:"bytes,2,rep,name=invalid_peers,json=invalidPeers,proto3" json:"invalid_peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateResponse) Reset()         { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()    {}
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_pool_0b04580054ff10b8, []int{3}
}
func (m *UpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResponse.Unmarshal(m, b)
}
func (m *UpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResponse.Marshal(b, m, deterministic)
}
func (dst *UpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResponse.Merge(dst, src)
}
func (m *UpdateResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateResponse.Size(m)
}
func (m *UpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResponse proto.InternalMessageInfo

func (m *UpdateResponse) GetBalance() *Balance {
	if m != nil {
		return m.Balance
	}
	return nil
}

func (m *UpdateResponse) GetInvalidPeers() []string {
	if m != nil {
		return m.InvalidPeers
	}
	return nil
}

type UpdateRequest struct {
	Peers                []string `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRequest) Reset()         { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()    {}
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pool_0b04580054ff10b8, []int{4}
}
func (m *UpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequest.Unmarshal(m, b)
}
func (m *UpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequest.Merge(dst, src)
}
func (m *UpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRequest.Size(m)
}
func (m *UpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequest proto.InternalMessageInfo

func (m *UpdateRequest) GetPeers() []string {
	if m != nil {
		return m.Peers
	}
	return nil
}

type Balance struct {
	Account              string   `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Credit               int32    `protobuf:"varint,2,opt,name=credit,proto3" json:"credit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Balance) Reset()         { *m = Balance{} }
func (m *Balance) String() string { return proto.CompactTextString(m) }
func (*Balance) ProtoMessage()    {}
func (*Balance) Descriptor() ([]byte, []int) {
	return fileDescriptor_pool_0b04580054ff10b8, []int{5}
}
func (m *Balance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Balance.Unmarshal(m, b)
}
func (m *Balance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Balance.Marshal(b, m, deterministic)
}
func (dst *Balance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Balance.Merge(dst, src)
}
func (m *Balance) XXX_Size() int {
	return xxx_messageInfo_Balance.Size(m)
}
func (m *Balance) XXX_DiscardUnknown() {
	xxx_messageInfo_Balance.DiscardUnknown(m)
}

var xxx_messageInfo_Balance proto.InternalMessageInfo

func (m *Balance) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *Balance) GetCredit() int32 {
	if m != nil {
		return m.Credit
	}
	return 0
}

type HostRequest struct {
	Kind                 string   `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	NodeURI              string   `protobuf:"bytes,2,opt,name=nodeURI,proto3" json:"nodeURI,omitempty"`
	Payout               string   `protobuf:"bytes,3,opt,name=payout,proto3" json:"payout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HostRequest) Reset()         { *m = HostRequest{} }
func (m *HostRequest) String() string { return proto.CompactTextString(m) }
func (*HostRequest) ProtoMessage()    {}
func (*HostRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pool_0b04580054ff10b8, []int{6}
}
func (m *HostRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostRequest.Unmarshal(m, b)
}
func (m *HostRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostRequest.Marshal(b, m, deterministic)
}
func (dst *HostRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostRequest.Merge(dst, src)
}
func (m *HostRequest) XXX_Size() int {
	return xxx_messageInfo_HostRequest.Size(m)
}
func (m *HostRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HostRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HostRequest proto.InternalMessageInfo

func (m *HostRequest) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *HostRequest) GetNodeURI() string {
	if m != nil {
		return m.NodeURI
	}
	return ""
}

func (m *HostRequest) GetPayout() string {
	if m != nil {
		return m.Payout
	}
	return ""
}

type HostResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HostResponse) Reset()         { *m = HostResponse{} }
func (m *HostResponse) String() string { return proto.CompactTextString(m) }
func (*HostResponse) ProtoMessage()    {}
func (*HostResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_pool_0b04580054ff10b8, []int{7}
}
func (m *HostResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostResponse.Unmarshal(m, b)
}
func (m *HostResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostResponse.Marshal(b, m, deterministic)
}
func (dst *HostResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostResponse.Merge(dst, src)
}
func (m *HostResponse) XXX_Size() int {
	return xxx_messageInfo_HostResponse.Size(m)
}
func (m *HostResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HostResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HostResponse proto.InternalMessageInfo

type ConnectRequest struct {
	ClientVersion        string   `protobuf:"bytes,1,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
	Node                 *Node    `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectRequest) Reset()         { *m = ConnectRequest{} }
func (m *ConnectRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectRequest) ProtoMessage()    {}
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_pool_0b04580054ff10b8, []int{8}
}
func (m *ConnectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectRequest.Unmarshal(m, b)
}
func (m *ConnectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectRequest.Marshal(b, m, deterministic)
}
func (dst *ConnectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectRequest.Merge(dst, src)
}
func (m *ConnectRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectRequest.Size(m)
}
func (m *ConnectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectRequest proto.InternalMessageInfo

func (m *ConnectRequest) GetClientVersion() string {
	if m != nil {
		return m.ClientVersion
	}
	return ""
}

func (m *ConnectRequest) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type ConnectResponse struct {
	PoolVersion          string   `protobuf:"bytes,1,opt,name=pool_version,json=poolVersion,proto3" json:"pool_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectResponse) Reset()         { *m = ConnectResponse{} }
func (m *ConnectResponse) String() string { return proto.CompactTextString(m) }
func (*ConnectResponse) ProtoMessage()    {}
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_pool_0b04580054ff10b8, []int{9}
}
func (m *ConnectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectResponse.Unmarshal(m, b)
}
func (m *ConnectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectResponse.Marshal(b, m, deterministic)
}
func (dst *ConnectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectResponse.Merge(dst, src)
}
func (m *ConnectResponse) XXX_Size() int {
	return xxx_messageInfo_ConnectResponse.Size(m)
}
func (m *ConnectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectResponse proto.InternalMessageInfo

func (m *ConnectResponse) GetPoolVersion() string {
	if m != nil {
		return m.PoolVersion
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "vipnode.pool.api.Empty")
	proto.RegisterType((*Node)(nil), "vipnode.pool.api.Node")
	proto.RegisterType((*RegisterRequest)(nil), "vipnode.pool.api.RegisterRequest")
	proto.RegisterType((*UpdateResponse)(nil), "vipnode.pool.api.UpdateResponse")
	proto.RegisterType((*UpdateRequest)(nil), "vipnode.pool.api.UpdateRequest")
	proto.RegisterType((*Balance)(nil), "vipnode.pool.api.Balance")
	proto.RegisterType((*HostRequest)(nil), "vipnode.pool.api.HostRequest")
	proto.RegisterType((*HostResponse)(nil), "vipnode.pool.api.HostResponse")
	proto.RegisterType((*ConnectRequest)(nil), "vipnode.pool.api.ConnectRequest")
	proto.RegisterType((*ConnectResponse)(nil), "vipnode.pool.api.ConnectResponse")
	proto.RegisterEnum("vipnode.pool.api.Node_Kind", Node_Kind_name, Node_Kind_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PoolClient is the client API for Pool service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PoolClient interface {
	// Register the node with a desired wallet.
	Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*Balance, error)
	// Host subscribes a host to receive vipnode_whitelist instructions.
	Host(ctx context.Context, opts ...grpc.CallOption) (Pool_HostClient, error)
	// Connect requests for available hosts to connect to as a client.
	Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*ConnectResponse, error)
	// Disconnect stops tracking the connection and billing, will prompt a
	// disconnect from both ends.
	Disconnect(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	// Update is a keep-alive for sharing the node's peering info. It returns
	// the current balance for the node.
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
	// Withdraw prompts a request to settle the node's balance.
	Withdraw(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
}

type poolClient struct {
	cc *grpc.ClientConn
}

func NewPoolClient(cc *grpc.ClientConn) PoolClient {
	return &poolClient{cc}
}

func (c *poolClient) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*Balance, error) {
	out := new(Balance)
	err := c.cc.Invoke(ctx, "/vipnode.pool.api.Pool/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *poolClient) Host(ctx context.Context, opts ...grpc.CallOption) (Pool_HostClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Pool_serviceDesc.Streams[0], "/vipnode.pool.api.Pool/Host", opts...)
	if err != nil {
		return nil, err
	}
	x := &poolHostClient{stream}
	return x, nil
}

type Pool_HostClient interface {
	Send(*HostRequest) error
	Recv() (*HostResponse, error)
	grpc.ClientStream
}

type poolHostClient struct {
	grpc.ClientStream
}

func (x *poolHostClient) Send(m *HostRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *poolHostClient) Recv() (*HostResponse, error) {
	m := new(HostResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *poolClient) Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*ConnectResponse, error) {
	out := new(ConnectResponse)
	err := c.cc.Invoke(ctx, "/vipnode.pool.api.Pool/Connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *poolClient) Disconnect(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/vipnode.pool.api.Pool/Disconnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *poolClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := c.cc.Invoke(ctx, "/vipnode.pool.api.Pool/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *poolClient) Withdraw(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/vipnode.pool.api.Pool/Withdraw", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PoolServer is the server API for Pool service.
type PoolServer interface {
	// Register the node with a desired wallet.
	Register(context.Context, *RegisterRequest) (*Balance, error)
	// Host subscribes a host to receive vipnode_whitelist instructions.
	Host(Pool_HostServer) error
	// Connect requests for available hosts to connect to as a client.
	Connect(context.Context, *ConnectRequest) (*ConnectResponse, error)
	// Disconnect stops tracking the connection and billing, will prompt a
	// disconnect from both ends.
	Disconnect(context.Context, *Empty) (*Empty, error)
	// Update is a keep-alive for sharing the node's peering info. It returns
	// the current balance for the node.
	Update(context.Context, *UpdateRequest) (*UpdateResponse, error)
	// Withdraw prompts a request to settle the node's balance.
	Withdraw(context.Context, *Empty) (*Empty, error)
}

func RegisterPoolServer(s *grpc.Server, srv PoolServer) {
	s.RegisterService(&_Pool_serviceDesc, srv)
}

func _Pool_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoolServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vipnode.pool.api.Pool/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoolServer).Register(ctx, req.(*RegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pool_Host_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PoolServer).Host(&poolHostServer{stream})
}

type Pool_HostServer interface {
	Send(*HostResponse) error
	Recv() (*HostRequest, error)
	grpc.ServerStream
}

type poolHostServer struct {
	grpc.ServerStream
}

func (x *poolHostServer) Send(m *HostResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *poolHostServer) Recv() (*HostRequest, error) {
	m := new(HostRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Pool_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoolServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vipnode.pool.api.Pool/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoolServer).Connect(ctx, req.(*ConnectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pool_Disconnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoolServer).Disconnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vipnode.pool.api.Pool/Disconnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoolServer).Disconnect(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pool_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoolServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vipnode.pool.api.Pool/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoolServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pool_Withdraw_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoolServer).Withdraw(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vipnode.pool.api.Pool/Withdraw",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoolServer).Withdraw(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Pool_serviceDesc = grpc.ServiceDesc{
	ServiceName: "vipnode.pool.api.Pool",
	HandlerType: (*PoolServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _Pool_Register_Handler,
		},
		{
			MethodName: "Connect",
			Handler:    _Pool_Connect_Handler,
		},
		{
			MethodName: "Disconnect",
			Handler:    _Pool_Disconnect_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Pool_Update_Handler,
		},
		{
			MethodName: "Withdraw",
			Handler:    _Pool_Withdraw_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Host",
			Handler:       _Pool_Host_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "pool/api/pool.proto",
}

func init() { proto.RegisterFile("pool/api/pool.proto", fileDescriptor_pool_0b04580054ff10b8) }

var fileDescriptor_pool_0b04580054ff10b8 = []byte{
	// 636 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x6f, 0x4f, 0x13, 0x4f,
	0x10, 0xee, 0xb5, 0xd7, 0x5e, 0x99, 0x42, 0x69, 0x06, 0x02, 0x47, 0x7f, 0xf9, 0x69, 0x39, 0x43,
	0x52, 0x7d, 0x51, 0x14, 0x7c, 0x67, 0x62, 0x44, 0x25, 0x82, 0xc4, 0xda, 0x2c, 0x20, 0xf1, 0x55,
	0x73, 0xdc, 0x6d, 0x60, 0xf5, 0xdc, 0x3d, 0xef, 0xb6, 0x10, 0xfc, 0x58, 0x7e, 0x04, 0x3f, 0x82,
	0x9f, 0xc8, 0xec, 0x9f, 0x6b, 0xa0, 0x67, 0x35, 0xf1, 0xdd, 0x3e, 0x33, 0xcf, 0xce, 0xcc, 0x33,
	0xfb, 0x64, 0x61, 0x25, 0x15, 0x22, 0xd9, 0x0e, 0x53, 0xb6, 0xad, 0x0e, 0x83, 0x34, 0x13, 0x52,
	0x60, 0xe7, 0x8a, 0xa5, 0x5c, 0xc4, 0x74, 0xa0, 0x63, 0x61, 0xca, 0x02, 0x0f, 0xea, 0xfb, 0x5f,
	0x52, 0x79, 0x13, 0x7c, 0x77, 0xc0, 0x1d, 0x8a, 0x98, 0x62, 0x1b, 0xaa, 0x2c, 0xf6, 0x9d, 0x9e,
	0xd3, 0x5f, 0x20, 0x55, 0x16, 0x63, 0x07, 0x6a, 0x93, 0x8c, 0xf9, 0x55, 0x1d, 0x50, 0x47, 0xdc,
	0x06, 0xf7, 0x33, 0xe3, 0xb1, 0x5f, 0xeb, 0x39, 0xfd, 0xf6, 0xce, 0x7f, 0x83, 0xd9, 0xa2, 0x03,
	0x55, 0x67, 0x70, 0xc4, 0x78, 0x4c, 0x34, 0x11, 0x7d, 0xf0, 0xae, 0x68, 0x96, 0x33, 0xc1, 0x7d,
	0x57, 0x97, 0x29, 0x20, 0x22, 0xb8, 0x97, 0x22, 0x97, 0x7e, 0xbd, 0xe7, 0xf4, 0x9b, 0x44, 0x9f,
	0x83, 0x87, 0xe0, 0xaa, 0xbb, 0xd8, 0x02, 0xef, 0x74, 0x78, 0x34, 0x7c, 0x7f, 0x36, 0xec, 0x54,
	0xb0, 0x09, 0xee, 0x9b, 0xfd, 0x93, 0x83, 0x8e, 0x83, 0x00, 0x8d, 0xd1, 0x1e, 0x39, 0x3c, 0xf9,
	0xd8, 0xa9, 0x06, 0x3f, 0x1d, 0x58, 0x26, 0xf4, 0x82, 0xe5, 0x92, 0x66, 0x84, 0x7e, 0x9d, 0xd0,
	0x5c, 0xe2, 0x23, 0x70, 0xd5, 0x34, 0x5a, 0x41, 0x6b, 0x67, 0xed, 0xf7, 0xd3, 0x11, 0xcd, 0xc1,
	0x55, 0xa8, 0x73, 0xc1, 0x23, 0xaa, 0xd5, 0xd5, 0x88, 0x01, 0xb8, 0x01, 0x4d, 0x95, 0x1d, 0xe7,
	0xec, 0x42, 0x6b, 0x5c, 0x20, 0x9e, 0xc2, 0xc7, 0xec, 0x02, 0xd7, 0xa0, 0x71, 0x1d, 0x26, 0x09,
	0x95, 0x56, 0x88, 0x45, 0xf8, 0x04, 0x56, 0xcd, 0x69, 0x1c, 0x4e, 0xe4, 0xa5, 0xc8, 0xd8, 0xb7,
	0x50, 0x2a, 0xb9, 0x75, 0xcd, 0x5a, 0x31, 0xb9, 0xbd, 0xdb, 0x29, 0x5c, 0x07, 0x8f, 0xe5, 0x63,
	0xad, 0xbe, 0xa1, 0xd5, 0x37, 0x58, 0x7e, 0xa0, 0xf4, 0x7f, 0x82, 0xf6, 0x69, 0x1a, 0x87, 0x92,
	0x12, 0x9a, 0xa7, 0x82, 0xe7, 0x14, 0x77, 0xc1, 0x3b, 0x0f, 0x93, 0x50, 0x0d, 0x6a, 0x54, 0x6d,
	0x94, 0x55, 0xbd, 0x34, 0x04, 0x52, 0x30, 0xf1, 0x01, 0x2c, 0x31, 0x7e, 0x15, 0x26, 0x2c, 0x1e,
	0xa7, 0x94, 0x66, 0xb9, 0x5f, 0xed, 0xd5, 0xfa, 0x0b, 0x64, 0xd1, 0x06, 0x47, 0x2a, 0x16, 0x6c,
	0xc1, 0x52, 0xd1, 0xcb, 0x6c, 0x6f, 0x15, 0xea, 0x86, 0xed, 0x68, 0xb6, 0x01, 0xc1, 0x33, 0xf0,
	0x6c, 0x7d, 0xf5, 0x96, 0x61, 0x14, 0x89, 0x09, 0x97, 0xd6, 0x23, 0x05, 0x54, 0xbb, 0x89, 0x32,
	0x1a, 0x33, 0xa9, 0xb7, 0x59, 0x27, 0x16, 0x05, 0xc7, 0xd0, 0x52, 0xba, 0x8a, 0x0e, 0x68, 0xdd,
	0x63, 0x6e, 0x4f, 0x0d, 0xa2, 0xd4, 0x9c, 0x92, 0x43, 0xeb, 0xb3, 0x02, 0xaa, 0xa2, 0x69, 0x78,
	0x23, 0x26, 0xd2, 0xbe, 0x84, 0x45, 0x41, 0x1b, 0x16, 0x4d, 0x51, 0xb3, 0xa2, 0x20, 0x82, 0xf6,
	0x2b, 0xc1, 0x39, 0x8d, 0xa6, 0x7d, 0xb6, 0xa0, 0x1d, 0x25, 0x8c, 0x72, 0x39, 0x2e, 0xbc, 0x67,
	0x3a, 0x2e, 0x99, 0xe8, 0x07, 0xeb, 0xc0, 0xc2, 0x2e, 0xd5, 0xbf, 0xdb, 0x25, 0x78, 0x0a, 0xcb,
	0xd3, 0x26, 0xf6, 0x69, 0x36, 0x61, 0x51, 0x31, 0x67, 0x7a, 0xb4, 0x54, 0xcc, 0x76, 0xd8, 0xf9,
	0x51, 0x03, 0x77, 0x24, 0x44, 0x82, 0x6f, 0xa1, 0x59, 0x98, 0x15, 0x37, 0xcb, 0x8d, 0x66, 0x8c,
	0xdc, 0x9d, 0xff, 0xc8, 0x41, 0x05, 0x8f, 0xc0, 0x55, 0xfa, 0xf1, 0xff, 0x32, 0xe9, 0xd6, 0xb2,
	0xbb, 0xf7, 0xe6, 0xa5, 0xed, 0xda, 0x2a, 0x7d, 0xe7, 0xb1, 0x83, 0x23, 0xf0, 0xac, 0x2e, 0xec,
	0x95, 0x2f, 0xdc, 0xdd, 0x6b, 0x77, 0xf3, 0x0f, 0x8c, 0xa2, 0x2a, 0xbe, 0x00, 0x78, 0xcd, 0xf2,
	0xc8, 0x16, 0x5d, 0x2f, 0x5f, 0xd1, 0x9f, 0x4e, 0x77, 0x5e, 0x22, 0xa8, 0xe0, 0x3b, 0x68, 0x18,
	0x67, 0xe2, 0xfd, 0x32, 0xe9, 0x8e, 0x67, 0xbb, 0xbd, 0xf9, 0x84, 0xe9, 0x40, 0xcf, 0xa1, 0x79,
	0xc6, 0xe4, 0x65, 0x9c, 0x85, 0xd7, 0xff, 0x32, 0xce, 0x79, 0x43, 0x7f, 0xa0, 0xbb, 0xbf, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x3b, 0xd8, 0xaa, 0x57, 0x57, 0x05, 0x00, 0x00,
}
